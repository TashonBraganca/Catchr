# Monitoring & Analytics Environment Variables
# Copy this file to .env.production and fill in the values

# ============================================
# VERCEL ANALYTICS (FREE - NO SETUP NEEDED)
# ============================================
# Vercel Analytics is automatically enabled in production
# No environment variables required
# Dashboard: https://vercel.com/[team]/[project]/analytics

# ============================================
# SENTRY ERROR TRACKING (OPTIONAL)
# ============================================
# Sign up at https://sentry.io
# Create a new project for React
VITE_SENTRY_DSN=https://your-sentry-dsn@o123456.ingest.sentry.io/1234567
VITE_SENTRY_ENVIRONMENT=production
VITE_SENTRY_RELEASE=1.0.0

# Sample rate for performance monitoring (0.0 to 1.0)
# 0.1 = 10% of transactions
VITE_SENTRY_TRACES_SAMPLE_RATE=0.1

# Sample rate for session replay (0.0 to 1.0)
# 0.1 = 10% of all sessions
VITE_SENTRY_REPLAYS_SESSION_SAMPLE_RATE=0.1

# Sample rate for error replays (0.0 to 1.0)
# 1.0 = 100% of sessions with errors
VITE_SENTRY_REPLAYS_ON_ERROR_SAMPLE_RATE=1.0

# ============================================
# CUSTOM PERFORMANCE LOGGING
# ============================================
# Enable performance logging in development
VITE_ENABLE_PERFORMANCE_LOGGING=false

# Performance metrics endpoint (your backend)
VITE_METRICS_ENDPOINT=https://cathcr.vercel.app/api/metrics/performance

# Batch metrics sending interval (milliseconds)
VITE_METRICS_BATCH_INTERVAL=30000

# ============================================
# DATABASE MONITORING
# ============================================
# Direct database connection for monitoring scripts
# Get from Supabase Dashboard → Project Settings → Database
DATABASE_URL=postgresql://postgres:[password]@[host]:5432/postgres

# Supabase project reference (for API calls)
SUPABASE_PROJECT_REF=your-project-ref

# Supabase service role key (for admin operations)
# WARNING: Never commit this to version control
SUPABASE_SERVICE_ROLE_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...

# ============================================
# VERCEL API (FOR MONITORING SCRIPTS)
# ============================================
# Create token at https://vercel.com/account/tokens
VERCEL_TOKEN=your-vercel-api-token

# Your Vercel team/org ID
VERCEL_TEAM_ID=team_xxxxxxxxxxxxx

# Your Vercel project ID
VERCEL_PROJECT_ID=prj_xxxxxxxxxxxxx

# ============================================
# ALERT WEBHOOKS (OPTIONAL)
# ============================================
# Slack webhook for critical alerts
SLACK_WEBHOOK_URL=https://hooks.slack.com/services/T00000000/B00000000/XXXXXXXXXXXXXXXXXXXX

# Discord webhook for alerts
DISCORD_WEBHOOK_URL=https://discord.com/api/webhooks/123456789/xxxxxxxxxxxxx

# Email for critical alerts
ALERT_EMAIL=devops@yourdomain.com

# ============================================
# MONITORING THRESHOLDS
# ============================================
# Page load time warning threshold (milliseconds)
THRESHOLD_PAGE_LOAD_WARNING=3000
THRESHOLD_PAGE_LOAD_CRITICAL=5000

# API response time warning threshold (milliseconds)
THRESHOLD_API_RESPONSE_WARNING=500
THRESHOLD_API_RESPONSE_CRITICAL=1000

# Database query time warning threshold (milliseconds)
THRESHOLD_DB_QUERY_WARNING=1000
THRESHOLD_DB_QUERY_CRITICAL=2000

# Error rate warning threshold (percentage)
THRESHOLD_ERROR_RATE_WARNING=1
THRESHOLD_ERROR_RATE_CRITICAL=2

# Voice processing time warning threshold (milliseconds)
THRESHOLD_VOICE_PROCESSING_WARNING=8000
THRESHOLD_VOICE_PROCESSING_CRITICAL=15000

# AI categorization time warning threshold (milliseconds)
THRESHOLD_AI_CATEGORIZATION_WARNING=5000
THRESHOLD_AI_CATEGORIZATION_CRITICAL=10000

# ============================================
# FEATURE FLAGS
# ============================================
# Enable/disable monitoring features
ENABLE_VERCEL_ANALYTICS=true
ENABLE_SENTRY=true
ENABLE_PERFORMANCE_LOGGING=true
ENABLE_ERROR_TRACKING=true
ENABLE_USER_ANALYTICS=true

# ============================================
# LOGGING CONFIGURATION
# ============================================
# Log level (debug, info, warn, error)
LOG_LEVEL=info

# Enable debug logging
DEBUG=false

# Enable verbose logging
VERBOSE=false

# ============================================
# NOTES
# ============================================
# 1. Never commit .env files to version control
# 2. Use different values for staging and production
# 3. Rotate secrets regularly
# 4. Use Vercel Environment Variables UI for sensitive data
# 5. Test monitoring setup in staging first

# ============================================
# QUICK SETUP GUIDE
# ============================================
# 1. Copy this file: cp .env.monitoring.example .env.production
# 2. Fill in required values (marked with REQUIRED)
# 3. Optional: Set up Sentry for error tracking
# 4. Optional: Set up alert webhooks
# 5. Deploy to Vercel
# 6. Verify monitoring in dashboards

# ============================================
# REQUIRED VARIABLES (MINIMAL SETUP)
# ============================================
# For basic monitoring, you only need:
# - VITE_SUPABASE_URL (already in .env)
# - VITE_SUPABASE_ANON_KEY (already in .env)
# - OPENAI_API_KEY (already in .env)
# Vercel Analytics works automatically, no setup needed!

# ============================================
# TESTING MONITORING
# ============================================
# Test health check:
# curl https://cathcr.vercel.app/api/health

# Test performance logger:
# npm run monitor:dashboard

# Test bundle analysis:
# npm run analyze:bundle

# Test database performance:
# npm run analyze:database

# Test API performance:
# npm run analyze:api
